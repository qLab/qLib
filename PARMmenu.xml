<?xml version="1.0" encoding="UTF-8"?>

<!--
    This file defines the menu items when right-clicking over parameters in
    Houdini.

    Files named the same (ie. PARMmenu.xml) can exist in $HOME/houdiniX.Y/
    directory and will supplement the original definitions found in
    $HFS/houdini/ (aka $HH).

    The format in this file is similar to the format in $HH/MainMenuMaster
    except that it uses the <menuDocument> and <menu> tags instead of
    <mainMenu> and <menuBar>. See the comments in that file for more advanced
    customization abilities.

    Another difference here is that most menu items in this file have no labels
    because they are dynamically created by Houdini. If labels are supplied to
    the items which currently have no labels in this file, they will be
    ignored.

    Note that the id's correspond to their hotkeys with the h.pane.parms.
    prefix (where available). For example, the item with id,
    "revert_to_prev_val", refers to the action in the hotkeys manager as
    "h.pane.parms.revert_to_prev_val".

    For scriptItem elements, a 'kwargs' python dictionary is provided with the
    following values:
	'parms'	    :	A list of hou.Parm objects which the script was invoked
			upon.
	'toolname'  :	The menu item's hotkey id (ie. the element's id
			prefixed with h.pane.parms.)
	'altclick'  :	True if the Alt key was also pressed, False otherwise
	'ctrlclick'  :	True if the Ctrl key was also pressed, False otherwise
	'shiftclick'  :	True if the Shift key was also pressed, False otherwise
	'cmdclick'  :	True if the Option key was also pressed, False
			otherwise. Note that this can only be true on OSX.
-->

<menuDocument>
<!-- menuDocument can only contain 1 menu element, whose id is
 implicitly "root_menu"
-->
	<menu>

		<scriptItem id="toggle_abs_rel_path_ql">
			<label>Toggle Absolute/Relative OP Path(s) [qL]</label>
			<context>
					<expression>
						import qlibmenutools
						return qlibmenutools.parm_is_string(kwargs)
					</expression>
			</context>
			<modifyItem><insertAfter>revert_to_prev_val</insertAfter></modifyItem>
			<scriptCode><![CDATA[
import qlibmenutools; qlibmenutools.toggle_abs_rel_path(kwargs)
]]></scriptCode>
		</scriptItem>

		<scriptItem id="switch_spaces_newlines_ql">
			<label>Switch Spaces/Newlines [qL]</label>
			<context>
					<expression>
						import qlibmenutools
						return qlibmenutools.parm_has_spaces_newlines(kwargs)
					</expression>
			</context>
			<modifyItem><insertAfter>toggle_abs_rel_path_ql</insertAfter></modifyItem>
			<scriptCode><![CDATA[
import qlibmenutools; qlibmenutools.switch_spaces_newlines(kwargs)
]]></scriptCode>
		</scriptItem>



		<subMenu id="qlib_more_menu">
			<label>More [qL]</label>
			<modifyItem><insertAfter>motion_effects_menu</insertAfter></modifyItem>

			<scriptItem id="ql_set_as_playback_start_frame">
				<label>Set as Playback Start Frame</label>
				<context>
					<expression>
						import qlibmenutools
						return qlibmenutools.parm_is_framenum(kwargs)
					</expression>
				</context>
				<scriptCode><![CDATA[
import qlibmenutools; qlibmenutools.set_as_playback_range(kwargs)
]]></scriptCode>
			</scriptItem>

			<scriptItem id="ql_set_as_playback_end_frame">
				<label>Set as Playback End Frame</label>
				<context>
					<expression>
						import qlibmenutools
						return qlibmenutools.parm_is_framenum(kwargs)
					</expression>
				</context>
				<scriptCode><![CDATA[
import qlibmenutools; qlibmenutools.set_as_playback_range(kwargs, startFrame=False)
]]></scriptCode>
			</scriptItem>

			<scriptItem id="ql_set_as_playback_frame_range">
				<label>Set as Playback Frame Range</label>
				<context>
					<expression>
						import qlibmenutools
						return qlibmenutools.parm_is_framerange(kwargs)
					</expression>
				</context>
				<scriptCode><![CDATA[
import qlibmenutools; qlibmenutools.set_as_playback_range(kwargs)
]]></scriptCode>
			</scriptItem>

			<separatorItem/>

			<scriptItem id="ql_open_in_file_browser">
				<label>Open as Path in File Browser...</label>
				<context>
					<expression>
						import qlibmenutools
						return qlibmenutools.parm_is_fspath(kwargs)
					</expression>
				</context>
				<scriptCode><![CDATA[
import qlibmenutools; qlibmenutools.open_as_fs_path(kwargs)
]]></scriptCode>
			</scriptItem>

			<scriptItem id="ql_open_in_mplay">
				<label>Open in MPlay...</label>
				<context>
					<expression>
						import qlibmenutools
						return qlibmenutools.parm_is_fspath(kwargs)
					</expression>
				</context>
				<scriptCode><![CDATA[
import qlibmenutools; qlibmenutools.open_in_mplay(kwargs)
]]></scriptCode>
			</scriptItem>

			<separatorItem/>

			<scriptItem id="ql_select_target_op">
				<label>Select/Add Target Node(s)</label>
				<context>
					<expression>
						import qlibmenutools
						return qlibmenutools.parm_has_target_node(kwargs)
					</expression>
				</context>
				<scriptCode><![CDATA[
import qlibmenutools; qlibmenutools.select_target_nodes(kwargs)
]]></scriptCode>
			</scriptItem>

			<scriptItem id="ql_expand_target_op_wildcards">
				<label>Expand Target Node Path Wildcards</label>
				<context>
					<expression>
						import qlibmenutools
						return qlibmenutools.parm_has_target_node(kwargs)
					</expression>
				</context>
				<scriptCode><![CDATA[
import qlibmenutools; qlibmenutools.expand_target_wildcards(kwargs)
]]></scriptCode>
			</scriptItem>

			<scriptItem id="ql_toggle_abs_rel_path_expressions">
				<label>Toggle Absolute/Relative Paths in Expressions</label>
				<context>
					<expression>
						import qlibmenutools
						return qlibmenutools.parm_is_copyable(kwargs)
					</expression>
				</context>
				<scriptCode><![CDATA[
import qlibmenutools; qlibmenutools.toggle_abs_rel_path_expressions(kwargs)
]]></scriptCode>
			</scriptItem>

			<scriptItem id="ql_copy_all_values_to_clipboard">
				<label>Copy All Parm Values to Clipboard</label>
				<context>
					<expression>
						import qlibmenutools
						return qlibmenutools.parm_is_copyable(kwargs)
					</expression>
				</context>
				<scriptCode><![CDATA[
import qlibmenutools; qlibmenutools.copy_all_parm_values_to_clipboard(kwargs)
]]></scriptCode>
			</scriptItem>

			<separatorItem/>


			<scriptItem id="ql_set_to_parent_network_1">
				<label>[subnet]: Parent Network, Input #1 (0)</label>
				<context>
					<expression>
						import qlibmenutools
						return qlibmenutools.parm_is_string(kwargs)
					</expression>
				</context>
				<scriptCode><![CDATA[
import qlibmenutools
qlibmenutools.set_parent_opinput(kwargs, 0)
]]></scriptCode>
			</scriptItem>

			<scriptItem id="ql_set_to_parent_network_2">
				<label>[subnet]: Parent Network, Input #2 (1)</label>
				<context>
					<expression>
						import qlibmenutools
						return qlibmenutools.parm_is_string(kwargs)
					</expression>
				</context>
				<scriptCode><![CDATA[
import qlibmenutools
qlibmenutools.set_parent_opinput(kwargs, 1)
]]></scriptCode>
			</scriptItem>


			<scriptItem id="ql_set_to_parent_network_3">
				<label>[subnet]: Parent Network, Input #3 (2)</label>
				<context>
					<expression>
						import qlibmenutools
						return qlibmenutools.parm_is_string(kwargs)
					</expression>
				</context>
				<scriptCode><![CDATA[
import qlibmenutools
qlibmenutools.set_parent_opinput(kwargs, 2)
]]></scriptCode>
			</scriptItem>


			<scriptItem id="ql_set_to_parent_network_4">
				<label>[subnet]: Parent Network, Input #4 (3)</label>
				<context>
					<expression>
						import qlibmenutools
						return qlibmenutools.parm_is_string(kwargs)
					</expression>
				</context>
				<scriptCode><![CDATA[
import qlibmenutools
qlibmenutools.set_parent_opinput(kwargs, 3)
]]></scriptCode>
			</scriptItem>


			<separatorItem/>


			<scriptItem id="ql_add_parm_value_multiplier">
				<label>Add Value/Multiplier to Parameter</label>
				<context>
					<expression>
						import qlibmenutools
						return qlibmenutools.parm_is_float(kwargs)
					</expression>
				</context>
				<scriptCode><![CDATA[
import qlibmenutools; qlibmenutools.add_parm_value_multiplier(kwargs)
]]></scriptCode>
			</scriptItem>

			<scriptItem id="ql_add_parm_value_multiplier_exp">
				<label>Add Value/Multiplier + Exponent</label>
				<context>
					<expression>
						import qlibmenutools
						return qlibmenutools.parm_is_float(kwargs)
					</expression>
				</context>
				<scriptCode><![CDATA[
import qlibmenutools; qlibmenutools.add_parm_value_multiplier(kwargs, add_exponent=True)
]]></scriptCode>
			</scriptItem>


			<scriptItem id="ql_set_rampbasis_label">
				<label>Set Ramp to...</label>
				<context>
					<expression>
						import qlibmenutools
						return qlibmenutools.parm_is_ramp(kwargs)
					</expression>
				</context>
			</scriptItem>

			<separatorItem/>

			<scriptItem id="ql_set_rampbasis_Constant">
				<label>Constant</label>
				<context>
					<expression>
						import qlibmenutools
						return qlibmenutools.parm_is_ramp(kwargs)
					</expression>
				</context>
				<scriptCode><![CDATA[
import qlibmenutools; qlibmenutools.set_ramp_basis(kwargs, hou.rampBasis.Constant)
]]></scriptCode>
			</scriptItem>

			<scriptItem id="ql_set_rampbasis_linear">
				<label>Linear</label>
				<context>
					<expression>
						import qlibmenutools
						return qlibmenutools.parm_is_ramp(kwargs)
					</expression>
				</context>
				<scriptCode><![CDATA[
import qlibmenutools; qlibmenutools.set_ramp_basis(kwargs, hou.rampBasis.Linear)
]]></scriptCode>
			</scriptItem>

			<scriptItem id="ql_set_rampbasis_CatmullRom">
				<label>Catmull-Rom</label>
				<context>
					<expression>
						import qlibmenutools
						return qlibmenutools.parm_is_ramp(kwargs)
					</expression>
				</context>
				<scriptCode><![CDATA[
import qlibmenutools; qlibmenutools.set_ramp_basis(kwargs, hou.rampBasis.CatmullRom)
]]></scriptCode>
			</scriptItem>

			<scriptItem id="ql_set_rampbasis_MonotoneCubic">
				<label>Monotone Cubic</label>
				<context>
					<expression>
						import qlibmenutools
						return qlibmenutools.parm_is_ramp(kwargs)
					</expression>
				</context>
				<scriptCode><![CDATA[
import qlibmenutools; qlibmenutools.set_ramp_basis(kwargs, hou.rampBasis.MonotoneCubic)
]]></scriptCode>
			</scriptItem>

			<scriptItem id="ql_set_rampbasis_Bezier">
				<label>Bezier</label>
				<context>
					<expression>
						import qlibmenutools
						return qlibmenutools.parm_is_ramp(kwargs)
					</expression>
				</context>
				<scriptCode><![CDATA[
import qlibmenutools; qlibmenutools.set_ramp_basis(kwargs, hou.rampBasis.Bezier)
]]></scriptCode>
			</scriptItem>

			<scriptItem id="ql_set_rampbasis_BSpline">
				<label>B-Spline</label>
				<context>
					<expression>
						import qlibmenutools
						return qlibmenutools.parm_is_ramp(kwargs)
					</expression>
				</context>
				<scriptCode><![CDATA[
import qlibmenutools; qlibmenutools.set_ramp_basis(kwargs, hou.rampBasis.BSpline)
]]></scriptCode>
			</scriptItem>

			<scriptItem id="ql_set_rampbasis_Hermite">
				<label>Hermite</label>
				<context>
					<expression>
						import qlibmenutools
						return qlibmenutools.parm_is_ramp(kwargs)
					</expression>
				</context>
				<scriptCode><![CDATA[
import qlibmenutools; qlibmenutools.set_ramp_basis(kwargs, hou.rampBasis.Hermite)
]]></scriptCode>
			</scriptItem>

			<separatorItem/>

			<scriptItem id="ql_use_as_descriptive_parm">
				<label>Use as Descriptive Parm</label>
				<context>
					<expression>
						import qlibmenutools
						return qlibmenutools.parm_is_descriptive(kwargs)
					</expression>
				</context>
				<scriptCode><![CDATA[
import qlibmenutools; qlibmenutools.use_as_descriptive_parm(kwargs)
]]></scriptCode>
			</scriptItem>


		</subMenu>

		<subMenu id="qlib_string_rel_ref_menu">
			<label>Reference Upstream Parm [qL]</label>
			<modifyItem><insertAfter>qlib_more_menu</insertAfter></modifyItem>
			<context>
					<expression>
						import qlibmenutools
						return qlibmenutools.parm_is_string(kwargs)
					</expression>
			</context>
			<scriptMenuStripDynamic id="qlib_string_rel_ref_items">
			<contentsScriptCode><![CDATA[
			import qlibmenutools
			return qlibmenutools.build_upstream_channel_refs_menu(kwargs)
			]]></contentsScriptCode>
			<scriptCode><![CDATA[
import qlibmenutools; qlibmenutools.set_upstream_channel_ref_value(kwargs)
]]></scriptCode>
	</scriptMenuStripDynamic>

		</subMenu>


	</menu>
</menuDocument>
